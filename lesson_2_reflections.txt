What happens when you initialize a repository? Why do you need to do it?

	Git created the .git hidden folder, which contains the metadata of the repository. It is necessary to initialize a repository, because normal folders are not repositories and thus not usable as such.

How is the staging area different from the working directory and the repository? What value do you think it offers?

	It could differentiate between files that are in your repository and are tracked, and files that are just in the dorectory, but are not supposed to be verion-controlled. It offers the value of you deciding what goes in your commits, helping you form a full logical change in a single commit, without adding additional files.

How can you use the staging area to make sure you have one commit per logical
change?
	
	By adding or removing the files, which are changed, but not involved in the current logical change. If after the commit there are more modified files in the project, they should be added in a future commit.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitaˆ™s automatic merging vs. always doing merges
manually?
