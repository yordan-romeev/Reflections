When would you want to use a remote repository rather than keeping all your work
local?

    Whenever you would like to share your code with somewone specific or the public, and also whenever you would like to backup your code to a remote server.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Because someone else may be working on the same repository and their code might make a conflict with yours, if it is automatically synced.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Branches are all part of the same repository, Clones are copies of a repository and forks are a GitHub copy of another GitHub Repository. I would use branches when I develop an experimental feature in my code and I want to have a full working version on the code before this. I would use Clone when I want a copy of the repository in another place on the machine. I would use fork, when I would like to work on someone esle's repository, without changing his code, but by giving him credit for the original work.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    You can use this info even when you are offline, you can check what other collaborators have been doing on the repository, you can merge and solve merging conflicts.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
